@using Module.PMV.Core.Assets.Features.DTOs.Assets.Response
@using Module.PMV.Core.Assets.Models.Assets

@using WebApp.Client.Pages.PMV.Assets.Components.Manage.ViewModels
@using WebApp.Client.Pages.PMV.Assets.Models;
@using WebApp.Client.Pages.PMV.Assets.ViewModels;
@using WebApp.UILibrary.Components.Grid


@inherits ComponentViewModelBase<AssetListViewModel>

<RadzenStack Orientation="Orientation.Vertical" Gap="1rem">
    <RadzenTemplateForm TItem="FilterAssetModel" Data="FilterData" Submit="HandleSubmit">
        <RadzenFieldset Text="Search" class="w-100">
            <RadzenRow Gap="5px" class="mb-2">
                <RadzenColumn Size="2">
                    <CustomField Text="Category" IsModern>
                        <RadzenDropDown Name="Category"
                                        Multiple="true"
                                        AllowFiltering=true
                                        AllowClear=true
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        Chips=true
                                        Data="Model.AssetListContainer!.Categories"
                                        TValue="string"
                                        TextProperty="Text"
                                        ValueProperty="Value"
                                        Value="FilterData.SelectedCategories"
                                        Change="@(args => HandleFilterChange(args))" />
                    </CustomField>
                </RadzenColumn>
                <RadzenColumn Size="2">
                    <CustomField Text="Sub Category" IsModern>
                        <RadzenDropDown Name="SubCategory"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        AllowFiltering=true
                                        AllowClear=true
                                        Data="Model.AssetListContainer!.SubCategories"
                                        TextProperty="Text"
                                        ValueProperty="Value"
                                        TValue="string"
                        @bind-Value="FilterData.SubCategory" />
                    </CustomField>
                </RadzenColumn>
                <RadzenColumn Size="2">
                    <CustomField  Text="Make" IsModern>
                        <RadzenDropDown Name="Brands"
                                        TValue="string"
                                        AllowClear=true
                                        Data="Model.AssetListContainer!.Brands"
                                        TextProperty="Text"
                                        ValueProperty="Value"
                                        AllowFiltering=true
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        @bind-Value="FilterData.Brand" />
                    </CustomField>
                </RadzenColumn>
                <RadzenColumn Size="2">
                    <CustomField Text="Registration Under" IsModern>
                        <RadzenDropDown Name="CompanyCode"
                                        TValue="string"
                                        TextProperty="Text"
                                        ValueProperty="Value"
                                        AllowFiltering=true
                                        AllowClear=true
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        Data="Model.AssetListContainer!.Companies"
                        @bind-Value="FilterData.CompanyCode" />
                    </CustomField>
                </RadzenColumn>
                <RadzenColumn Size="2">
                    <CustomField  Text="Status" IsModern>
                        <RadzenDropDown Name="Status"
                                        TValue="string"
                                        TextProperty="Text"
                                        ValueProperty="Value"
                                        AllowClear=true
                                        Data="Model.AssetListContainer!.Statuses"
                        @bind-Value="FilterData.Status" />
                    </CustomField>
                </RadzenColumn>
                <RadzenColumn Size="2">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="5px">
                        <CustomField Text="Asset Code"  IsModern>
                            <RadzenTextBox Name="AssetCode"
                            @bind-Value="FilterData.AssetCode" Style="width:100%" />
                        </CustomField>
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow JustifyContent="JustifyContent.End">
                <RadzenColumn Size="1">
                    <CstButton ButtonType="EnumButtonType.Search"
                               ActionType="ButtonType.Submit" ButtonClass="w-100"/>
                </RadzenColumn>
            </RadzenRow>
            
        </RadzenFieldset>
    </RadzenTemplateForm>


    <RadzenDataGrid Data=@AssetData.ToList()
                    TItem="InternalAssetResponse"
                    AllowPaging="true"
                    PageSize="10"
                    AllowColumnReorder="true"
                    AllowColumnResize="true"
                    AllowFiltering=true
                    AllowSorting="true"
                    Style="overflow-x:scroll"
                    PageSizeOptions="@PageSizeOption.Option"
                    ShowPagingSummary="true"
                    AllowColumnPicking=true>
        <Columns>
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="AssetCode" Title="Asset Code" Width="160px">
                <Template Context="asset">
                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
                        <span>@asset.AssetCode</span>&nbsp;
                        <a href="@($"/asset/manage/view/{asset.Id}")" style="text-decoration:none">
                            <RadzenIcon Icon="pageview" />
                        </a>
                    </RadzenStack>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="AssetDesc" Title="Description" />
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="MakeModelYear" Title="Make/Model/Year">
                <Template Context="data">
                    <span>@($"{data.YearMakeModel}")</span>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="PlateNo" Title="Plate No" TextAlign="TextAlign.Center" Width="140px" />
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="CompanyCode" Title="Reg. Under" TextAlign="TextAlign.Center" Width="180px" />
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="PurchaseDate" Title="Purchase Date" FormatString="{0:dd/MMM/yyyy}" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="VendorCode" Title="Vendor" />
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="LPONo" Title="PO No" />
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="TankCapacity" Title="Tank Capacity" />
            <RadzenDataGridColumn TItem="InternalAssetResponse" Property="KmPerHr" Title="SMU" TextAlign="TextAlign.Right" Width="120px" />
            <RadzenDataGridColumn TItem="InternalAssetResponse" Title="Operator/Driver">
                <Template Context="data">
                    @foreach (var item in data.Drivers) {
                        <RadzenStack Orientation=Orientation.Horizontal Gap="5px">
                            <RadzenIcon Icon="account_circle" />
                            <RadzenText Text="@item.EmpCode" />

                        </RadzenStack>
                    }
                </Template>
            </RadzenDataGridColumn>
            @if(EditMode != "read")
            {
                <RadzenDataGridColumn TItem="InternalAssetsResponse" Context="asset"
                                      TextAlign="TextAlign.Center" Width="50px"
                                      Filterable=false
                                      Sortable=false
                                      Resizable=false
                                      Pickable=false
                                      Visible=true>
                    <Template Context="asset">
                        <CstButton Size=ButtonSize.Small
                                   ButtonType="EnumButtonType.Edit" IconOnly=true ButtonVariant="Variant.Text" Click="@(() => PageNavigation.NavigateTo("/asset/form/internal",asset.AssetCode) )" />
                    </Template>
                </RadzenDataGridColumn>
            }
        </Columns>
    </RadzenDataGrid>

</RadzenStack>



@code {

    [Parameter]
    public string? Status { get; set; } = "";

    [Parameter]
    public string EditMode { get; set; } = "";

    protected override void OnAfterRender(bool firstRender) {
        if (firstRender) {
            FilteredSubCategories = Model.AssetListContainer!.SubCategories;
            StateHasChanged();
        }
    }
    
    protected FilterAssetModel FilterData => Model.FilterAsset;

    protected IEnumerable<InternalAssetResponse> AssetData
                    => Model.AssetListContainer!.InternalAssets.ToList();

    protected List<SharedServer.Commons.SelectItem> FilteredSubCategories { get; set; } = new();

    private void HandleFilterChange(object values)
    {

        string str = values is IEnumerable<object> ? string.Join(",", (IEnumerable<object>)values) : (string)values;

        FilterData.Category = str;
        if (values is IEnumerable<object> trueValue)
        {
            if (trueValue.Count() == 0) {
                FilteredSubCategories = Model.AssetListContainer!.GetAll();
            }
            else {
                var stringValues = trueValue.Select(x => x.ToString()).ToList();
                FilteredSubCategories = Model.AssetListContainer!.GetSubCategoryByCat(stringValues);
            }
        };

        InvokeAsync(StateHasChanged);
    }

    private async Task HandleSubmit()
    {
        FilterData.AssetType = "internal";
        await Model.Filter();
    }



}
